version: '3.8'

services:
  frontend:
    container_name: clonet-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    image: clonet-frontend:latest
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    networks:
      - clonet-network

  backend:
    container_name: clonet-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: clonet-backend:latest
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
      - ./data/parquet:/app/data/parquet
      - ./data/delta:/app/data/delta
      - spark_warehouse:/opt/spark/warehouse
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=password
      - DB_NAME=clonet_db
      - PORT=5000
    deploy:
      resources:
        limits:
          memory: 2G
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - clonet-network

  mysql:
    container_name: clonet-mysql
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: clonet_db
      MYSQL_USER: clonet_user
      MYSQL_PASSWORD: clonet_password
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - clonet-network

networks:
  clonet-network:
    driver: bridge

volumes:
  frontend_node_modules:
  backend_node_modules:
  spark_warehouse:
  mysql_data: